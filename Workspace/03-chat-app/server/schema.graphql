type Query {
  messages: [Message]
}

type Mutation {
  addMessage(input: MessageInput!): Message
}

# A "Subscription" is another operation type, just like "Query" and "Mutation".
# GranhQL subscriptions use "WebSockets" protocol.
type Subscription {
  # by convention for subscriptions, we usually choose a name that describes an event e.g. messageAdded
  messageAdded: Message
}

type Message {
  id: ID!
  from: String
  text: String
}

input MessageInput {
  text: String
}
