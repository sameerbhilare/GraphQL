type Query {
  # query to return single company
  # passing arg to graphql query
  company(id: ID!): Company

  # query to return single job
  # passing arg to graphql query
  job(id: ID!): Job

  # query to return all jobs
  jobs: [Job] # an array of jobs
}

# In GraphQL, to modify data, we need to use Mutation.
# 'Mutation' is root type just like 'Query'.
type Mutation {
  # In 'Mutation', we can define operations which usually take args
  # All mutations must return a result
  createJob(companyId: ID, title: String, description: String): ID
}

type Company {
  # 'ID' means unique identifier
  # ! mark after 'ID' means it should never be null
  id: ID!
  name: String
  description: String
  jobs: [Job]
}

type Job {
  # 'ID' means unique identifier
  # ! mark after 'ID' means it should never be null
  id: ID!
  title: String
  company: Company
  description: String
}
